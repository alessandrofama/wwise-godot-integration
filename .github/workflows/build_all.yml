name: Build

on:
  push:
    branches:
      - main
      - 'wwise_v*'
      - refactor-build-script
  pull_request:
    branches:
      - main
      - 'wwise_v*'

env:
  BASE_BRANCH: ci
  WWISE_VERSION: "2025.1.0"
  WWISE_BUILD: "8897"
  GODOT_ENGINE_VERSION: "4.3"

jobs:
  build-desktop:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }} (${{ matrix.target-name }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-2022
            sdk-platform: windows
            scons-platform: windows
            target: editor
            target-name: Editor
            build-profile: build_profile_editor.json
          - name: Windows
            os: windows-2022
            sdk-platform: windows
            scons-platform: windows
            target: template_debug
            target-name: Debug
            build-profile: build_profile_runtime.json
          - name: Windows
            os: windows-2022
            sdk-platform: windows
            scons-platform: windows
            target: template_release
            target-name: Release
            build-profile: build_profile_runtime.json

          - name: macOS
            os: macos-14
            sdk-platform: mac
            scons-platform: macos
            target: editor
            target-name: Editor
            build-profile: build_profile_editor.json
          - name: macOS
            os: macos-14
            sdk-platform: mac
            scons-platform: macos
            target: template_debug
            target-name: Debug
            build-profile: build_profile_runtime.json
          - name: macOS
            os: macos-14
            sdk-platform: mac
            scons-platform: macos
            target: template_release
            target-name: Release
            build-profile: build_profile_runtime.json

          - name: Linux
            os: ubuntu-22.04
            sdk-platform: linux
            scons-platform: linux
            target: editor
            target-name: Editor
            build-profile: build_profile_editor.json
          - name: Linux
            os: ubuntu-22.04
            sdk-platform: linux
            scons-platform: linux
            target: template_debug
            target-name: Debug
            build-profile: build_profile_runtime.json
          - name: Linux
            os: ubuntu-22.04
            sdk-platform: linux
            scons-platform: linux
            target: template_release
            target-name: Release
            build-profile: build_profile_runtime.json
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Perform common setup
        uses: ./.github/actions/setup
        id: setup
        with:
          sdk-platform: ${{ matrix.sdk-platform }}
          target: ${{ matrix.target }}
          repo-token: ${{ secrets.WWISE_DL_REPO_TOKEN }}

      - name: Set up Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential pkg-config libx11-dev \
            yasm zip gcc-11 g++-11 libtbb-dev -y

      - name: Prepare SDK
        if: steps.setup.outputs.cache-hit != 'true'
        shell: bash
        run: |
            SDK_TARGET=""
            if [[ "${{ runner.os }}" == "Windows" ]]; then
                SDK_TARGET="Windows_vc170"
            elif [[ "${{ runner.os }}" == "macOS" ]]; then
                SDK_TARGET="Mac"
            elif [[ "${{ runner.os }}" == "Linux" ]]; then
                SDK_TARGET="Linux"
            fi
            python ./addons/Wwise/native/tools/wwise-dl.py --user ${{ secrets.AK_USER }} --pass ${{ secrets.AK_PASS }} ${{ env.WWISE_VERSION }}.${{ env.WWISE_BUILD }} $SDK_TARGET --plugins Auro ConvolutionReverb iZotope McDSP Reflect SoundSeed SoundSeedGrain ResonanceAudio Motion ASIO AkChannelRouter MasteringSuite CrankcaseAudioREVModelPlayer Impacter --output ./addons/Wwise/native/wwise_sdk/

      - name: Compile library
        shell: bash
        run: |
          cd addons/Wwise/native
          scons platform=${{ matrix.scons-platform }} target=${{ matrix.target }} wwise_config=${{ contains(matrix.target, 'release') && 'release' || 'profile' }} use_static_cpp=yes wwise_sdk=wwise_sdk/SDK build_profile=${{ matrix.build-profile }}

      - name: Upload lib
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.scons-platform }}-${{ matrix.target }}
          path: addons/Wwise/native/lib

  build-ios:
    runs-on: macos-14
    name: iOS (${{ matrix.target-name }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: template_debug
            target-name: Debug
            flags: arch=arm64 ios_min_version=12.0
            build-profile: build_profile_runtime.json
          - target: template_release
            target-name: Release
            flags: arch=arm64 ios_min_version=12.0
            build-profile: build_profile_runtime.json
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Perform common setup
        uses: ./.github/actions/setup
        id: setup
        with:
          sdk-platform: ios
          target: ${{ matrix.target }}
          repo-token: ${{ secrets.WWISE_DL_REPO_TOKEN }}
      
      - name: Prepare SDK (iOS)
        if: steps.setup.outputs.cache-hit != 'true'
        run: |
            python ./addons/Wwise/native/tools/wwise-dl.py --user ${{ secrets.AK_USER }} --pass ${{ secrets.AK_PASS }} ${{ env.WWISE_VERSION }}.${{ env.WWISE_BUILD }} iOS --plugins Auro ConvolutionReverb iZotope McDSP Reflect SoundSeed SoundSeedGrain ResonanceAudio Motion ASIO AkChannelRouter MasteringSuite CrankcaseAudioREVModelPlayer Impacter --output ./addons/Wwise/native/wwise_sdk/

      - name: Compile library
        shell: bash
        run: |
          cd addons/Wwise/native
          scons platform=ios target=${{ matrix.target }} wwise_config=${{ contains(matrix.target, 'release') && 'release' || 'profile' }} use_static_cpp=yes wwise_sdk=wwise_sdk/SDK build_profile=${{ matrix.build-profile }} ${{ matrix.flags }}

      - name: Upload lib
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ matrix.target }}
          path: addons/Wwise/native/lib
  
  build-android:
    runs-on: ubuntu-22.04
    name: Android (${{ matrix.target-name }} - ${{ matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: template_debug
            target-name: Debug
            arch: arm64
            build-profile: build_profile_runtime.json
          - target: template_debug
            target-name: Debug
            arch: arm32
            build-profile: build_profile_runtime.json
          - target: template_release
            target-name: Release
            arch: arm64
            build-profile: build_profile_runtime.json
          - target: template_release
            target-name: Release
            arch: arm32
            build-profile: build_profile_runtime.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Perform common setup
        uses: ./.github/actions/setup
        id: setup
        with:
          sdk-platform: android
          target: ${{ matrix.target }}
          repo-token: ${{ secrets.WWISE_DL_REPO_TOKEN }}

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Android dependencies
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: Prepare SDK (Android)
        if: steps.setup.outputs.cache-hit != 'true'
        run: |
          python ./addons/Wwise/native/tools/wwise-dl.py --user ${{ secrets.AK_USER }} --pass ${{ secrets.AK_PASS }} ${{ env.WWISE_VERSION }}.${{ env.WWISE_BUILD }} Android --plugins Auro ConvolutionReverb iZotope McDSP Reflect SoundSeed SoundSeedGrain ResonanceAudio Motion ASIO AkChannelRouter MasteringSuite CrankcaseAudioREVModelPlayer Impacter --output ./addons/Wwise/native/wwise_sdk/

      - name: Compile Android godot-cpp library
        shell: bash
        run: |
          cd addons/Wwise/native/godot-cpp
          mkdir -p bin
          scons platform=android target=${{ matrix.target }} build_profile="../${{ matrix.build-profile }}" -j6 arch=${{ matrix.arch }} ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME

      - name: Build Android AAR
        shell: bash
        run: |
          cd addons/Wwise/native/wwise_sdk/SDK
          WWISESDK=$(pwd)
          cd ../../android
          chmod +x ./gradlew
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            ABI="arm64-v8a"
          else
            ABI="armeabi-v7a"
          fi
          ./gradlew assemble${{ matrix.target-name }} -Pabi=$ABI -PWWISE_SDK="$WWISESDK"

      - name: Upload lib
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.target }}-${{ matrix.arch }}
          path: addons/Wwise/native/lib

  package-addon:
    runs-on: ubuntu-22.04
    needs: [build-desktop, build-ios, build-android]
    name: Package Addon
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all libs
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Assemble all artifacts
        run: |
          echo "Assembling libraries..."
          mkdir -p addons/Wwise/native/lib
          for artifact_dir in artifacts/*; do
            if [ -d "$artifact_dir" ]; then
              echo "Merging from $artifact_dir..."
              rsync -a "$artifact_dir/" addons/Wwise/native/lib/
            fi
          done

      - name: Clean up addon for distribution
        run: |
          rm -rf ./addons/Wwise/native/godot-cpp
          rm -rf ./addons/Wwise/native/src
          rm -rf ./addons/Wwise/native/vs2022
          rm -rf ./addons/Wwise/native/android
          rm -rf ./addons/Wwise/native/linux
          rm -rf ./addons/Wwise/native/doc_classes
          rm -f ./addons/Wwise/native/SConstruct
          rm -f ./addons/Wwise/native/build_profile*.json
          rm -f ./LICENSE
          rm -f ./README.md
          rm -f ./.gitattributes
          rm -f ./.gitmodules
          rm -rf ./.git
          rm -rf ./.github
          rm -rf ./tests
          rm -rf ./artifacts

      - name: Upload final addon artifact
        uses: actions/upload-artifact@v4
        with:
          name: wwise-${{ env.WWISE_VERSION }}-for-godot-${{ env.GODOT_ENGINE_VERSION }}
          path: ./